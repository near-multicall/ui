function t(t,s,n,e){Object.defineProperty(t,s,{get:n,set:e,enumerable:!0,configurable:!0})}var s=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequired5b2;s.register("eADy7",(function(n,e){var o;o=n.exports,Object.defineProperty(o,"__esModule",{value:!0,configurable:!0}),t(n.exports,"default",(function(){return l}));var l=s("54KxZ").AppPage})),s.register("54KxZ",(function(n,e){t(n.exports,"AppPage",(function(){return h}));var o=s("kE6vJ"),l=s("bbzbN"),r=s("aU4vn"),a=s("7fPBF"),u=s("8AWvt"),i=s("6mD9r"),d=s("MACsA"),c=s("BeRUz"),m=s("uY0A8"),f=s("lKcE5");class h extends a.Component{fromJSON(t){this.clear();const s=m.STORAGE.layout;if(!Array.isArray(t)||!t.length)return;this.columnID=0;let n={...s,columnOrder:[],columns:{menu:s.columns.menu}};for(let s in t){const e={id:`column-${this.columnID}`,title:"Drag here",taskIds:[]},o=Array.from(n.columnOrder);o.push(`column-${this.columnID}`),n={...n,columns:{...n.columns,[`column-${this.columnID}`]:e},columnOrder:o},this.columnID++;for(let o in t[s]){let l={id:"task-"+this.taskID++,addr:"",func:"",json:t[s][o]};n.columns[e.id].taskIds.push(l.id),n.tasks[l.id]=l}}m.STORAGE.setLayout(n)}fromBase64(t){this.clear();const s=m.STORAGE.layout;if(!Array.isArray(t)||!t.length)return;this.columnID=0;let n={...s,columnOrder:[],columns:{menu:s.columns.menu}};for(let s in t){const e={id:`column-${this.columnID}`,title:"Drag here",taskIds:[]},o=Array.from(n.columnOrder);o.push(`column-${this.columnID}`),n={...n,columns:{...n.columns,[`column-${this.columnID}`]:e},columnOrder:o},this.columnID++;for(let o in t[s]){const{address:l,actions:a}=t[s][o];let u={id:"task-"+this.taskID++,addr:"",func:"",json:{address:l,actions:a.map((t=>({func:t.func,args:JSON.parse(r.Base64.decode(t.args)),gas:t.gas,depo:t.depo})))}};n.columns[e.id].taskIds.push(u.id),n.tasks[u.id]=u}}m.STORAGE.setLayout(n)}toJSON(t=!1){const s=m.STORAGE.layout;let n=[];for(let e of s.columnOrder)if(0!==s.columns[e].taskIds.length){n.push([]);for(let o of s.columns[e].taskIds){const s=TASKS.find((t=>t.id===o));if(s)if(t)try{n[n.length-1].push(s.instance.current.toCall())}catch(t){continue}else n[n.length-1].push(s.instance.current.toCall());else console.warn(`no task with id ${o}`)}}return n}toBase64(t=!1){const s=m.STORAGE.layout;let n=[];for(let e of s.columnOrder)if(0!==s.columns[e].taskIds.length){n.push([]);for(let o of s.columns[e].taskIds){const s=TASKS.find((t=>t.id===o));if(s)if(t)try{n[n.length-1].push(f.fromCall.toBase64(s.instance.current.toCall()))}catch(t){continue}else n[n.length-1].push(f.fromCall.toBase64(s.instance.current.toCall()));else console.warn(`no task with id ${o}`)}}return n}toErrors(){const t=m.STORAGE.layout;let s=[];if(!(null===window||void 0===window?void 0:window.TASKS))return s;const n=TASKS.filter((s=>!t.columns.menu.taskIds.includes(s.id))).map((t=>t.instance.current));for(let t of n)for(let n of t.schema.errors())s.push({task:t,message:n.message});return s}export(){return JSON.stringify({schedules:this.toBase64()})}empty(){const t=m.STORAGE.layout;return 1===t.columnOrder.length&&0===t.columns[t.columnOrder[0]].taskIds.length}setExpanded(t){this.expanded=t,this.forceUpdate(),SIDEBAR.forceUpdate()}componentDidMount(){window.SIDEBAR.switchPage("app"),window.LAYOUT=this,m.STORAGE.load()}render(){const t=m.STORAGE.layout;return(0,l.jsxs)(u.DragDropContext,{onDragEnd:this.onDragEnd,children:[(0,l.jsx)(u.Droppable,{droppableId:"layout",direction:"horizontal",type:"column",children:s=>(0,l.jsxs)("div",{className:"layout-wrapper",children:[(0,l.jsxs)("div",{className:"layout-container",tutorial:this.empty()?"yes":"no",...s.droppableProps,ref:s.innerRef,children:[t.columnOrder.map(((s,n)=>{const e=t.columns[s],o=e.taskIds.map((s=>t.tasks[s]));return(0,l.jsx)(i.Column,{column:e,tasks:o,index:n},e.id)})),s.placeholder]}),(0,l.jsx)("div",{className:"empty-container "+(this.expanded?"expanded-empty":"")})]})}),(0,l.jsx)(d.Menu,{layout:this})]})}constructor(t){super(t),(0,o.default)(this,"taskID",0),(0,o.default)(this,"columnID",1),(0,o.default)(this,"expanded",!1),(0,o.default)(this,"getTaskID",(()=>this.taskID)),(0,o.default)(this,"getColumnID",(()=>this.columnID)),(0,o.default)(this,"getTasks",(()=>m.STORAGE.layout.tasks)),(0,o.default)(this,"getColumns",(()=>m.STORAGE.layout.columns)),(0,o.default)(this,"deleteTask",(t=>{const s=m.STORAGE.layout,{columnId:n,taskIndex:e}=h.findTaskCoordinates(t);if(null==n||null==e)return void console.error("Task not found");const o=s.columns[n],l=Array.from(o.taskIds);l.splice(e,1);const r={...o,taskIds:l},a={...s,columns:{...s.columns,[n]:r}};m.STORAGE.setLayout(a)})),(0,o.default)(this,"duplicateTask",(t=>{const s=m.STORAGE.layout,{columnId:n,taskIndex:e}=h.findTaskCoordinates(t);if(null==n||null==e)return void console.error("Task not found");const o=JSON.parse(JSON.stringify(s.tasks[t.toString()]));o.id=`task-${this.taskID}`;const l=s.columns[n],r=Array.from(l.taskIds);r.splice(e,0,o.id),this.taskID++;const a={...l,taskIds:r},u={...s,columns:{...s.columns,[n]:a},tasks:{...s.tasks,[o.id]:o}};window.COPY={from:t,to:o.id},m.STORAGE.setLayout(u)})),(0,o.default)(this,"clear",(()=>{var t;console.warn("layout cleared"),window.TASKS&&(window.TASKS=[]),this.taskID=0,this.columnID=1,null===(t=window.EDITOR)||void 0===t||t.edit(null),m.STORAGE.setLayout(c.initialData)})),(0,o.default)(this,"deleteColumn",(t=>{const s=m.STORAGE.layout,n=Array.from(s.columnOrder);n.splice(t,1);let e={...s,columnOrder:n};0===n.length&&(e={...s,columns:{...s.columns,[`column-${this.columnID}`]:{id:`column-${this.columnID}`,title:"Drag here",taskIds:[]}},columnOrder:["column-"+this.columnID++]}),m.STORAGE.setLayout(e)})),(0,o.default)(this,"addColumn",(()=>{const t={id:`column-${this.columnID}`,title:"Drag here",taskIds:[]},s=m.STORAGE.layout,n=Array.from(s.columnOrder);n.push(`column-${this.columnID}`);const e={...s,columns:{...s.columns,[`column-${this.columnID}`]:t},columnOrder:n};this.columnID++,m.STORAGE.setLayout(e)})),(0,o.default)(this,"onDragEnd",(t=>{const s=m.STORAGE.layout,{destination:n,source:e,draggableId:o,type:l}=t;if(!n)return;if(n.droppableId===e.droppableId&&n.index===e.index)return;if("column"===l){const t=Array.from(s.columnOrder);t.splice(e.index,1),t.splice(n.index,0,o);const l={...s,columnOrder:t};return void m.STORAGE.setLayout(l)}const r=s.columns[e.droppableId],a=s.columns[n.droppableId];if(r&&a)if(r===a){const t=Array.from(r.taskIds);t.splice(e.index,1),t.splice(n.index,0,o);const l={...r,taskIds:t},a={...s,columns:{...s.columns,[l.id]:l}};m.STORAGE.setLayout(a)}else{let t;if("menu"===a.id)return;if("menu"===r.id){const n=Array.from(r.taskIds),o=n[e.index];n[e.index]=`task-${this.taskID}`;const l=JSON.parse(JSON.stringify(s.tasks[o.toString()]));l.id=`task-${this.taskID}`,m.STORAGE.layout.tasks[l.id]=l,this.taskID++,t={...r,taskIds:n}}else{const s=Array.from(r.taskIds);s.splice(e.index,1),t={...r,taskIds:s}}const l=Array.from(a.taskIds);l.splice(n.index,0,o);const u={...a,taskIds:l},i={...s,columns:{...s.columns,[t.id]:t,[u.id]:u}};m.STORAGE.setLayout(i)}else console.warn(`Something went wrong when dragging from ${r} to ${a}`)})),this.clear(),document.addEventListener("onlayoutupdated",(()=>this.forceUpdate()))}}(0,o.default)(h,"findTaskCoordinates",(t=>{let s;const n=m.STORAGE.layout;return{columnId:n.columnOrder.find((e=>(s=n.columns[e].taskIds.indexOf(t),s>=0))),taskIndex:s}}))}));
//# sourceMappingURL=app.f5b1b804.js.map
