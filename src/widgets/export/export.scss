@use "sass/base";
@use "sass/color";
@use "sass/size";
@use "sass/mixin";
@use "sass/font";

.Export {
    @include mixin.full;
    @include mixin.no-scrollbar;
    display: flex;
    flex-flow: column nowrap;
    gap: size.$gap;
    overflow-y: scroll;

    &-scheduler {
        &-modeSelector.MuiFormControl-root {
            width: 100%;
        }
    }

    &-action {
        margin-top: auto;
        padding: 0.25 * size.$gap 0.5 * size.$gap;
        position: sticky;
        bottom: 0;
        border-radius: size.$task-radius;
        z-index: 1;

        &--propose {
            background-color: color.$green;

            &:disabled {
                background-color: color.$darkish;
                cursor: not-allowed;
            }

            p {
                font-size: size.$smaller-text;
                color: color.$red;
            }
        }

        &--login {
            background-color: color.$light;
        }
    }

    &-section {
        flex: 1;
        position: relative;
        @include mixin.center-items(flex-start);
        flex-flow: column nowrap;
        width: 100%;
        max-height: 25%;

        .header {
            width: calc(100% - 1.5 * size.$gap);
            @include mixin.center-items(space-between);

            h3 {
                cursor: pointer;
                font-size: size.$text;
                color: color.$light-text;
                text-align: left;
            }

            .icon {
                @include mixin.light-icon;
                cursor: pointer;
                font-size: size.$text;
            }

            .collapse {
                position: absolute;
                left: 0;

                &[collapsed="yes"] {
                    transform: rotate(-90deg);
                }

                transition: all 50ms linear;
            }
        }

        .value {
            flex: 1;
            width: 100%;
            @include mixin.no-scrollbar;
            box-shadow: inset 0px 0px 30px 0px rgba(color.$white, 0.1);
            border-radius: size.$task-radius;
            overflow-y: scroll;

            .code {
                padding: 0.5 * size.$gap;
                overflow: auto;
                white-space: pre-wrap;
                white-space: -moz-pre-wrap;
                white-space: -o-pre-wrap;
                word-wrap: break-word;
                font-family: font.$code;
                font-size: size.$small-text;
                color: color.$light-text;
            }
        }
    }

    &-params {
        display: flex;
        flex-direction: column;
        padding-top: size.$smaller-text;

        .unitInput {
            @include mixin.center-items(center, flex-start);
            flex-flow: row nowrap;

            .MuiTextField-root {
                width: unset !important;

                &:first-of-type {
                    flex: 2 1 auto;
                }

                &:last-of-type {
                    flex: 1 0 max-content;
                    margin-left: 0.25 * size.$gap;

                    .MuiInputBase-root {
                        width: 100% !important;
                        font-size: size.$small-text;
                    }
                }
            }

            &:first-of-type .MuiTextField-root {
                &:first-of-type fieldset {
                    border-radius: size.$task-radius 0 0 0;
                }

                &:last-of-type fieldset {
                    border-radius: 0 size.$task-radius 0 0;
                }
            }

            &:last-of-type .MuiTextField-root {
                &:first-of-type fieldset {
                    border-radius: 0 0 0 size.$task-radius;
                }

                &:last-of-type fieldset {
                    border-radius: 0 0 size.$task-radius 0;
                }
            }
        }

        &-choice {
            @include mixin.center-items(flex-start, center);
            flex-flow: row nowrap;
            width: 100%;
            margin: 0.25 * size.$gap 0;

            p {
                color: color.$light-text;
                font-weight: 800;
                font-size: size.$small-text;
            }

            button {
                height: 2em;
                margin: 0 0.75ch;
                padding: 0 1em;
                border-radius: size.$task-radius;
                border: 1px solid color.$light;
                font-size: size.$small-text;
                font-weight: 800;
                color: color.$light;
                background-color: rgba(color.$white, 0.1);

                &.selected {
                    color: color.$green;
                    border: 1px solid color.$green;
                }

                &:hover {
                    background-color: rgba(color.$white, 0.2);
                }
            }
        }

        &-scheduleTime {
            margin-top: 0.25 * size.$gap !important;
        }

        .MuiTextField-root {
            p.Mui-error {
                color: color.$red;
                font-weight: 800;
                font-family: font.$text;
                font-size: size.$small-text;

                &::before {
                    content: "Error: ";
                }
            }

            label {
                font-family: font.$text;
                font-weight: 800;

                &.Mui-focused {
                    color: color.$light-text;
                }

                &.Mui-error {
                    color: color.$red;
                }
            }

            .MuiOutlinedInput-root {
                input,
                textarea {
                    color: color.$white;
                    font-family: font.$code;
                    font-size: size.$small-text;
                }

                textarea {
                    @include mixin.no-scrollbar;
                    white-space: pre;
                    overflow-x: scroll !important;
                }

                fieldset {
                    border-color: color.$lightish;
                    border-width: 1px;
                    box-shadow: inset 0px 0px 30px 0px rgba(color.$white, 0.1);
                    border-radius: 0;

                    legend {
                        background-color: color.$black;
                        margin-left: -2px;
                        padding: 2px;
                        border-radius: 20px;
                        visibility: visible;
                    }

                    legend > span {
                        font-size: 0.75em;
                        visibility: hidden;
                    }
                }

                &:hover fieldset {
                    border-color: color.$white;
                }

                &.Mui-focused fieldset {
                    border-color: color.$white;
                }

                &.Mui-error fieldset {
                    border-color: color.$red !important;
                }
            }

            .MuiInput-underline {
                &:hover::before,
                &::before {
                    border-bottom-color: color.$lightish;
                }

                &:hover::after,
                &::after {
                    border-bottom-color: color.$white;
                }

                input {
                    font-weight: 500;
                }
            }

            *:not(input) {
                color: color.$light-text;
                font-size: 1em;
            }

            width: 100%;
            font-size: 1.8rem;
        }

        & > .MuiTextField-root {
            &:first-of-type {
                margin-top: 0;
            }

            &:first-of-type > .MuiOutlinedInput-root > fieldset {
                border-radius: size.$task-radius size.$task-radius 0 0;
            }

            &:last-of-type > .MuiOutlinedInput-root > fieldset {
                border-radius: 0 0 size.$task-radius size.$task-radius;
            }
        }
    }

    &-errors {
        width: 100%;

        .header {
            padding-left: 0.5 * size.$gap;

            h3 {
                font-size: size.$text;
                color: color.$red;
                text-align: left;
            }
        }

        .error-list {
            width: 100%;
            display: flex;
            flex-flow: column nowrap;
            padding-top: 0.5 * size.$gap;
            box-shadow: inset 0px 0px 30px 0px rgba(color.$white, 0.1);
            border-radius: size.$task-radius;

            .error {
                width: 100%;
                max-width: calc(100% - size.$gap);
                padding: 0.5 * size.$gap;
                padding-top: 0;
                @include mixin.center-items(space-between);
                gap: 0.5 * size.$gap;
                flex-flow: row nowrap;
                font-size: size.$text;
                font-weight: 800;
                color: color.$red;

                .msg {
                    @include mixin.no-wrap;
                }

                .icon {
                    @include mixin.light-icon;
                    cursor: pointer;
                    color: color.$red;
                    font-size: size.$large-text;
                }
            }
        }
    }
}

.MuiMenuItem-root {
    font-size: size.$small-text !important;
}
