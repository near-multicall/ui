@use "sass/mixin";
@use "sass/size";
@use "sass/color";
@use "sass/font";
@use "sass/animation";

.dao-container {
    @include mixin.page-wrapper;
    display: flex;
    flex-flow: column nowrap;

    .header {
        @include mixin.center-items(space-between);
        flex-flow: row nowrap;
        max-width: 120rem;
        margin: 0 auto;
        .address-container {
            @include mixin.center-items;
            flex-flow: row nowrap;
            width: auto;

            .MuiTextField-root {
                width: calc(100% - 2 * size.$gap);
                max-width: 100ch;
                text-align: left;
                margin: calc(size.$gap - 0.5 * size.$large-text) size.$gap;

                .MuiInputBase-root {
                    font-size: size.$large-text;
                    color: color.$darkish;

                    input {
                        padding: 0;
                        padding-left: 0.5 * size.$gap;
                    }

                    &.Mui-error {
                        color: darken(color.$red, 10%);
                    }
                }

                fieldset {
                    border: none;
                    border-bottom: 2px solid currentColor;
                    border-radius: 0;
                }

                p {
                    display: none;
                }
            }

            .MuiInputAdornment-root {
                width: fit-content;

                p {
                    display: block !important;
                    font-size: size.$large-text !important;
                    color: color.$darkish;
                }
            }
        }
        .tab-list {
            @include mixin.center-items;
            box-shadow: inset 0px 0px 30px 0px rgba(color.$white, 0.1);
            background-color: color.$lightest;
            border-radius: size.$task-radius;
            padding: 0;
            height: size.$tab-list-height;
            overflow: hidden;
            z-index: 1;
            button {
                flex: 1;
                padding: 0;
                width: 30%;
                height: 100%;
                padding: 0 size.$gap;
                font-size: size.$text;
                background-color: transparent;
                &:focus,
                &:hover {
                    background-color: rgba(color.$white, 0.1);
                }
                &.active-tab {
                    background-color: color.$white;
                }
            }
        }
    }

    &::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        height: calc(2.5 * size.$gap - 0.5 * (size.$gap - size.$large-text));
        min-width: 100%;
        background-color: color.$light;
    }

    .info-container {
        @include mixin.full;
        display: grid;
        gap: size.$gap;
        padding: size.$gap;
        max-width: 120rem;
        max-height: calc(100% - (4.5 * size.$gap - 0.5 * (size.$gap - size.$large-text)));

        &.active-tab-panel {
            width: 100%;
            height: 100%;
            margin: 0 auto;
        }

        &.error {
            display: flex;
            flex-flow: column;
            align-self: center;
            justify-content: center;
            align-items: center;
            font-size: size.$text;

            p.red {
                color: color.$red;
            }

            p.green {
                color: color.$green;
            }
        }

        .info-text {
            font-size: size.$text;
            color: color.$dark;
            max-width: 40em;

            a {
                color: darken(color.$blue, 20%) !important;
            }
        }

        .info-card {
            display: flex;
            flex-flow: column nowrap;
            position: relative;
            background-color: rgba(color.$lightest, 0.25);
            border-radius: size.$task-radius;
            font-size: size.$small-text;
            overflow: hidden;

            .title {
                padding: 0.5 * size.$gap size.$gap;
                font-size: size.$large-text;

                span {
                    float: right;
                }
            }

            @for $i from 0 to 3 {
                .MuiSvgIcon-root:nth-of-type(#{$i + 1}) {
                    position: absolute;
                    font-size: size.$large-text;
                    top: 0.5 * size.$gap;
                    right: calc(0.5 * size.$gap + $i * (size.$large-text + 0.25 * size.$gap));
                    cursor: pointer;
                }
            }

            ul {
                display: flex;
                flex-flow: column nowrap;

                li {
                    margin-right: 0.5 * size.$gap;

                    span {
                        position: relative;
                        display: block;
                        width: 100%;

                        a {
                            color: darken(color.$blue, 20%) !important;
                        }

                        .MuiSvgIcon-root {
                            visibility: hidden;
                            position: absolute;
                            font-size: size.$large-text;
                            top: auto !important;
                            bottom: auto !important;
                            right: 0 !important;
                            cursor: pointer;
                        }
                    }

                    &:hover {
                        background-color: color.$lightest;

                        span > .MuiSvgIcon-root {
                            visibility: visible;
                        }
                    }
                }
            }
        }

        .create-multicall {
            width: fit-content;
            align-self: center;
            font-size: size.$text;
            padding: 0.25em 0.75em;
            border-radius: 0.5em;
            background-color: color.$green;

            &.proposal-exists {
                background-color: color.$blue !important;
            }
        }
    }
}
